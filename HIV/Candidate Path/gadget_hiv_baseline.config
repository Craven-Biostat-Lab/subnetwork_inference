# 12/2014
# Generates all candidate paths for HIV hits, connecting to HIV interfaces.
# Removes ubiquitin and sumo (and friends) from the background network at the very beginning.

### Background Network Setup ###

# add organism feature
EFEATURE	organism=Discrete(host|host-virus|virus)

# Edge type feature
# Note that the edge feature/value combo of "etype/in_cx" and the node feature "complex" are special and will be treated specially by the
# GAMS printer, so please maintain them if you want to use complexes. sorry about the kludge.  
EFEATURE	etype=CatSet(rxn|ppi|ptmod|in_cx) 


# Read the background network. Format for EDGE_LIBRARY lines is:
# EDGE_LIBRARY	filename	default-feature=value|...|	start_column
# You can specify a set of default feature values to assign to every edge in each file. (or, you can specify in the file)
# "start_column" is the column index of the first node in the edge.


# host PPIs
EDGE_LIBRARY	hiv/networks/hippie_entrez_eg.tab	organism=host|etype=ppi	1
EDGE_LIBRARY	hiv/networks/hprd_entrez_eg.tab	organism=host|etype=ppi	1
EDGE_LIBRARY	hiv/networks/biogrid_ppi.tab	organism=host|etype=ppi	1

# host post-translational modifications from biogrid
EDGE_LIBRARY	hiv/networks/biogrid_ptmod.tab	organism=host|etype=ptmod	1

# host kinase-substrate
EDGE_LIBRARY	hiv/networks/newman_geneids_only_eg.tab	organism=host|etype=ptmod	1

# host reactome edges - between modifiers of adjacent reactions
EDGE_LIBRARY	hiv/networks/reactome_neighboring_modifiers.tab	organism=host|etype=rxn	1
# host protein complexes
EDGE_LIBRARY	hiv/networks/reactome_full_complex_edges.tab	organism=host|etype=in_cx	1

# human-hiv interactions
EDGE_LIBRARY	hiv/networks/phisto_hiv_eg.tab	organism=host-virus	1
EDGE_LIBRARY	hiv/networks/biogrid_hiv_entrez_eg.tab	organism=host-virus	1
EDGE_LIBRARY	hiv/networks/ptak_ncbi_hiv_eg.tab	organism=host-virus	1
EDGE_LIBRARY	hiv/networks/jaeger_human_hiv.tab	organism=host-virus	1

### Node features ###
# NFEATURE	feature=Type(value|...|...)	description	filename	delimiter	column_of_value
# (assumes the node is in column 0) 

# HIV genes
NFEATURE	hiv_genes=Discrete(virus)	names of HIV genes	hiv/features/hiv_genes.tab	\t	1

# RNAi hits and interfaces
NFEATURE	rnai=Discrete(hdf|hrf|both|gadget)	rnai hits	hiv/features/hits_gadget.tab	\t	1
NFEATURE	pinterface=discrete(interface)	human/HIV interfaces	hiv/features/agg_interfaces.tab	\t	1


# Ubiquitin, sumo, and friends - we'll be removing them from the network under the assumption that they
# are non-specific interactions.
NFEATURE	ubiSumo=Discrete(ubiSumo)	ubiquitin/sumo and similar	hiv/features/ubiquitin.tab	\t	1

# Protein complexes. This version of the NFEATURE declaration assigns a default value of "complex" to the identifiers
# in column 2 of the protein->complex edges.
NFEATURE	complex=Discrete(complex)	protein complexes	hiv/networks/reactome_full_complex_edges.tab	\t	2=complex


### Node and edge filters let us grab groups of nodes/edges that share annotations ###
# Define some filters...
# NFILTER	filter_type	feature_name	accepted_feature_values

# We will later be keeping only nodes that aren't annotated as ubiSumo.
NFILTER	ubi_f	NotEqualsFilter	ubiSumo	ubiSumo

# Filter for RNAi hits
NFILTER	rnai_f	EqualsFilter	rnai	hrf|hdf|both|gadget

# Filter for HIV genes
NFILTER	viral_f	EqualsFilter	hiv_genes	virus

# Protein complexes 
NFILTER	cx_node_f	EqualsFilter	complex	complex

# Edge filter for protein->complex edges
EFILTER	cx_f	EqualsFilter	etype	in_cx

# Edge filter for host->virus edges
EFILTER	hv_f	EqualsFilter	organism	host-virus

### Filter Managers can combine filters and be applied to individual genes or groups. ###
# Filter managers, not filters, are provided to PathFinders to decide what paths are legal.
# It's a bit inelegant. In this config file, I'm really just wrapping up individual filters into FilterManagers.

# Edge filter managers to identify protein->complex edges and host-virus edges
EFILTERMANAGER	cx_m	or	any	cx_f
EFILTERMANAGER	virus_m	or	any	hv_f

# The anti-ubiquitin filter
NFILTERMANAGER	ubi_m	or	all	ubi_f

# This one accepts single nodes or sets of nodes that are RNAi hits
NFILTERMANAGER	hits_m	or	all	rnai_f

# This one accepts viral components
NFILTERMANAGER	viral_m	or	any	viral_f

### Graph Filtering ###
# By giving a filter manager to FILTER_GRAPH, we specify which nodes we are allowed to KEEP in the 
# graph that we read in from the EdgeLibraries. So, this command keeps only nodes that are NOT 
# annotated as ubiquitin or sumo. Filtering step is performed when config.buildGraph() is called.
FILTER_GRAPH	ubi_m

### Pathfinding ###

# Paths must: START with hit ("hits_m" filtermanager)
# END with viral component ("viral_m")
# and can be up to 3 interactions long. (hit -> intermediate -> interface -> HIV)
# "FreeEdge" means that we get protein->complex edges ("cx_m") without deducting from path length:
# hit -> complex -> intermediate -> interface -> hiv
# The complex->anything edges are really only coming from Reactome at this point.
PATHFINDER	hostvirusPM	BasicFreeEdgePathFinder	hits_m	viral_m	3	cx_m

### "Subgraphs": special node sets that are added to paths but aren't in the linear chain. ###
# When we bring a complex into a path, we also want to bring in the rest of its constituent proteins.
# This "subgraph" command will create another GAMS set that links protein->complex edges up to 
# each path. 
# "TARGET_IN_PATH" means for each path, we grab the protein->complex edges ("cx_m") for which
# the complex ("target") is in the path. 
SUBGRAPH	subcx	edges=cx_m	TARGET_IN_PATH

### Output File Locations and Naming ###

# Prefix for output files that will be needed for the GAMS/CPLEX portion of the pipeline
GAMS_FILE	hiv/gams/hiv_len3_gadget

# Prefix for all output files that are used for visualization in Cytoscape
# Will also produce a SIF file that's used for diffusion kernel scoring
OUT_PREFIX	hiv/cytoscape/hiv_len3_gadget
